{"version":3,"sources":["ui-patterns/ui-shell/Header.jsx","ui-patterns/list/StockItemList.jsx","services/form/displayform.mock.ts","services/form/searchform.mock.ts","services/list/table-list.mock.ts","services/list/linkedlist.mock.ts","services/composite/masterdetail.mock.ts","services/form/forms.service.ts","services/list/list.service.ts","services/composite/compositeform.service.ts","util/timer.js","services/list/stock-item-mock.service.ts","services/list/stock-item.api.ts","services/list/stock-item.service.ts","services/index.ts","services/form/displayform.mock.api.ts","services/form/searchform.mock.api.ts","services/list/table-list.mock.api.ts","services/list/linkedlist.mock.api.ts","services/composite/masterdetails.mock.api.ts","services/form/forms.api.ts","services/list/list.api.ts","services/composite/compositeform.api.ts","services/list/stock-item-mock.api.ts","components/list/StockItemList.tsx","ui-patterns/ui-shell/UIShellBody.jsx","ui-patterns/ui-shell/UIShell.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","_this$props","this","props","title","subtitle","react_default","a","createElement","className","data-notification","role","width","height","viewBox","xmlns","d","Component","StockItemList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","columns","formatters","onRowClick","id","setState","selectedRow","renderRow","row","StructuredList","key","onClick","concat","value","name","checked","state","Icon","icon","iconCheckmarkSolid","map","col","format","val","data","stockService","getStockItems","_this2","ui_shell_Header","selection","border","head","charAt","toUpperCase","slice","replace","i","FormMock","createClass","_getFormDetails","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","label","txtvalue","type","dwvalue","stop","apply","arguments","SearchFormMock","address","city","zipcode","country","TableListMock","_getTableData","Name","Address","City","State","ZipCode","Country","LinkedListMock","_getLinkedListData","United States","TX","CA","Other","Mexico","Aguascalientes","Baja California","MasterDetailsMock","_getMasterDetails","FormService","_doPostFormValues","_callee2","details","_context2","console","log","_x","_doUpdateFormValues","_callee3","_context3","_x2","_doPostFormWizard","_callee4","_context4","_x3","_doPostFormWizard2","_callee5","_context5","_x4","_doSearch","_callee6","_context6","_x5","ListService","Error","_getList2ListData","_getSearchListData","CompositeFormService","timer","_timer","time","callback","Promise","resolve","setTimeout","StockItemMockService","baseUrl","_getStockItems","description","stock","unitPrice","picture","manufacturer","StockItemApi","StockItemService","superagent","set","then","res","body","Container","bind","MockFormApi","to","SearchFormMockApi","TableListMockApi","LinkedListMockApi","MasterDetailMockApi","FormApi","ListApi","CompositeFormApi","StockItemMockApi","StockItemListView","stockApi","get","list_StockItemList","UIShellBody","components","Stock Items","defaultComponent","PatternName","patternName","showDescription","Fade20","aria-hidden","UIShell","header","menuTitle","menuItems","onPatternSelection","renderSideNavItems","renderSideNavItem","components_UIShell","href","isActive","e","aria-label","prefix","defaultExpanded","UIShell_Fade20","ui_shell_UIShellBody","App","ui_shell_UIShell","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b8703f66.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./patterns.scss\";\n\nclass Header extends Component {\n  render() {\n    const { title, subtitle } = this.props;\n    return (\n      <div className=\"bx--row pattern-description\">\n        <div className=\"bx--col-xs-12\">\n          <h1 className=\"pattern-title\">{title}</h1>\n          <div\n            data-notification\n            className=\"bx--inline-notification bx--inline-notification--info\"\n            role=\"alert\"\n          >\n            <div className=\"bx--inline-notification__details\">\n              <svg\n                className=\"bx--inline-notification__icon\"\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm1-3V7H7v6h2zM8 5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\" />\n              </svg>\n              <div className=\"bx--inline-notification__text-wrapper\">\n                <p className=\"bx--inline-notification__title\">{\"\"}</p>\n                <p className=\"bx--inline-notification__subtitle\">{subtitle}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport {\n    StructuredListWrapper,\n    StructuredListRow,\n    StructuredListCell,\n    StructuredListHead,\n    StructuredListBody,\n    StructuredListInput,\n    Icon\n} from \"carbon-components-react\";\nimport { iconCheckmarkSolid } from \"carbon-icons\";\nimport Header from \"../ui-shell/Header\";\nimport \"../ui-shell/patterns.scss\";\n\nclass StockItemList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            selectedRow: 0,\n\n        };\n    }\n    title = 'Stock Items';\n    subtitle = 'This is the current inventory of items';\n    columns = [\n        \"name\",\n        \"description\",\n        \"stock\",\n        \"unitPrice\",\n        \"picture\",\n        \"manufacturer\",\n    ];\n    formatters = {};\n\n    async componentDidMount() {\n        this.setState({\n            data: await this.props.stockService.getStockItems()\n        });\n    }\n\n    onRowClick = id => {\n        this.setState({ selectedRow: id });\n    };\n\n    renderRow = (row, id) => {\n        return (\n            <StructuredListRow key={id} onClick={() => this.onRowClick(id)}>\n                <div>\n                    <StructuredListInput\n                        id={`row-${id}`}\n                        value=\"row-0\"\n                        title=\"row-0\"\n                        name=\"row-0\"\n                        //defaultChecked={this.state.selectedRow === id}\n                        checked={this.state.selectedRow === id}\n                    />\n                    <StructuredListCell>\n                        <Icon\n                            className=\"bx--structured-list-svg\"\n                            icon={iconCheckmarkSolid}\n                        />\n                    </StructuredListCell>\n                </div>\n                {this.columns.map(col => {\n                    const format = this.formatters[col] || function (val) { return val; };\n                    return (\n                        <StructuredListCell key={col} className=\"simple-list-row\">\n                            {format(row[col])}\n                        </StructuredListCell>\n                    );\n                })}\n            </StructuredListRow>\n        );\n    };\n\n    render() {\n        const data = this.state.data;\n        return (\n            <div className=\"bx--grid pattern-container\">\n                <Header\n                    title={this.title}\n                    subtitle={this.subtitle}\n                />\n                <div className=\"bx--row\">\n                    <div className=\"bx--col-xs-12\">\n                        <StructuredListWrapper selection border>\n                            <StructuredListHead>\n                                <StructuredListRow head>\n                                    <StructuredListCell head />\n                                    {this.columns.map(key => {\n                                        return (\n                                            <StructuredListCell head key={key}>\n                                                {key.charAt(0).toUpperCase() +\n                                                    key.slice(1).replace(/([A-Z])/g, \" $1\")}\n                                            </StructuredListCell>\n                                        );\n                                    })}\n                                </StructuredListRow>\n                            </StructuredListHead>\n                            <StructuredListBody>\n                                {data.map((row, i) => {\n                                    return this.renderRow(row, i);\n                                })}\n                            </StructuredListBody>\n                        </StructuredListWrapper>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default StockItemList;\n","import {MockFormApi} from './displayform.mock.api';\nimport { FormDetails } from \"../../models/form/FormDetails\";\nimport {ObjectFactory} from 'typescript-ioc';\n\n\nexport const displayFormMockFactory: ObjectFactory = () => {\n  console.log('ProductMock factory');\n  return new FormMock();\n};\n\nexport class FormMock implements MockFormApi  {\n  async getFormDetails():Promise<FormDetails[]> {\n    return [\n        { label: \"Name\", txtvalue: \"John Doe\", type: \"textinput\" ,dwvalue:[]},\n        { label: \"Address\", txtvalue: \"123 Main Street\", type: \"textinput\",dwvalue:[] },\n        { label: \"City\", txtvalue: \"Anytown\", type: \"textinput\",dwvalue:[] },\n        { label: \"State\", dwvalue: [\"TX\"], type: \"dropdown\",txtvalue:\"\" },\n        { label: \"ZipCode\", txtvalue: \"12345\", type: \"textinput\",dwvalue:[] },\n        { label: \"Country\", dwvalue: [\"United States\"], type: \"dropdown\",txtvalue:\"\"  }\n    ];\n  }\n \n  \n}\n","import {SearchFormMockApi} from './searchform.mock.api';\nimport { FormData } from \"../../models/form/FromData\";\nimport {ObjectFactory} from 'typescript-ioc';\n\n\nexport const SearchFormMockFactory: ObjectFactory = () => {\n  console.log('SearchForm factory');\n  return new SearchFormMock();\n};\n\nexport class SearchFormMock implements SearchFormMockApi  {\n  async getFormDetails():Promise<FormData[]> {\n    return [\n      {\n        name: \"Lin\",\n        address: \"123 Main Street\",\n        city: \"Austin\",\n        state: \"TX\",\n        zipcode: \"12345\",\n        country: \"USA\"\n      },\n      {\n        name: \"Mak\",\n        address: \"45 2nd Street\",\n        city: \"Austin\",\n        state: \"TX\",\n        zipcode: \"78766\",\n        country: \"USA\"\n      },\n      {\n        name: \"Joe\",\n        address: \"40 Down Street\",\n        city: \"San Francisco\",\n        state: \"CA\",\n        zipcode: \"90706\",\n        country: \"USA\"\n      }\n    ];\n  }\n \n  \n}","import {TableListMockApi} from './table-list.mock.api';\nimport { TableData } from \"../../models/list/TableData\";\nimport {ObjectFactory} from 'typescript-ioc';\n\n\nexport const TableMockFactory: ObjectFactory = () => {\n  console.log('Table factory');\n  return new TableListMock();\n};\n\nexport class TableListMock implements TableListMockApi  {\n async getTableData(): Promise<TableData[]> {\n    return [\n        {\n          Name: \"Lin\",\n          Address: \"123 Main Street\",\n          City: \"Austin\",\n          State: \"TX\",\n          ZipCode: \"12345\",\n          Country: \"USA\"\n        },\n        {\n          Name: \"Mak\",\n          Address: \"45 2nd Street\",\n          City: \"Austin\",\n          State: \"TX\",\n          ZipCode: \"78766\",\n          Country: \"USA\"\n        },\n        {\n          Name: \"Joe\",\n          Address: \"40 Down Street\",\n          City: \"San Francisco\",\n          State: \"CA\",\n          ZipCode: \"90706\",\n          Country: \"USA\"\n        }\n      ];\n  }\n \n  \n}","import {LinkedListMockApi} from './linkedlist.mock.api';\nimport { LinkedListData } from \"../../models/list/LinkedListData\";\nimport {ObjectFactory} from 'typescript-ioc';\n\n\nexport const LinkedListMockFactory: ObjectFactory = () => {\n  console.log('Table factory');\n  return new LinkedListMock();\n};\n\nexport class LinkedListMock implements LinkedListMockApi  {\n async getLinkedListData(): Promise<LinkedListData[]> {\n   return [\n     {\n    \"United States\": {\n      \"TX\": [\"Austin\", \"Dallas\", \"Other\"],\n      \"CA\": [\"San Francisco\", \"Los Angeles\", \"Other\"],\n      \"Other\": [\"Other\"]\n    },\n    Mexico: {\n      \"Aguascalientes\": [\"Aguascalientes\", \"Calvillo\", \"Other\"],\n      \"Baja California\": [\"Tijuana\", \"Mexicali\", \"Other\"],\n      \"Other\": [\"Other\"]\n    }\n  }\n   ]\n   \n  }\n \n  \n}","import {MasterDetailMockApi} from './masterdetails.mock.api';\nimport { MasterDetails } from \"../../models/composite/MasterDetails\";\nimport {ObjectFactory} from 'typescript-ioc';\n\n\nexport const MasterDetailsMockFactory: ObjectFactory = () => {\n  console.log('MasterDetailsMock factory');\n  return new MasterDetailsMock();\n};\n\nexport class MasterDetailsMock implements MasterDetailMockApi  {\n  async getMasterDetails():Promise<MasterDetails[][]> {\n   \n    return [\n        [\n          { label: \"Name\", value: \"Lin\", type: \"textinput\" },\n          { label: \"Address\", value: \"123 Main Street\", type: \"textinput\"},\n          { label: \"City\", value: \"Austin\", type: \"textinput\"},\n          { label: \"State\", value: \"TX\", type: \"dropdown\" },\n          { label: \"ZipCode\", value: \"12345\", type: \"textinput\" },\n          { label: \"Country\", value: \"United States\", type: \"dropdown\"}\n        ],\n        [\n          { label: \"Name\", value: \"Mak\", type: \"textinput\"},\n          { label: \"Address\", value: \"45 2nd Street\", type: \"textinput\"},\n          { label: \"City\", value: \"Austin\", type: \"textinput\" },\n          { label: \"State\", value: \"TX\", type: \"dropdown\"},\n          { label: \"ZipCode\", value: \"78766\", type: \"textinput\" },\n          { label: \"Country\", value: \"United States\", type: \"dropdown\"}\n        ],\n        [\n          { label: \"Name\", value: \"Joe\", type: \"textinput\" },\n          { label: \"Address\", value: \"40 Down Street\", type: \"textinput\" },\n          { label: \"City\", value: \"San Francisco\", type: \"textinput\" },\n          { label: \"State\", value: \"CA\", type: \"dropdown\"},\n          { label: \"ZipCode\", value: \"90706\", type: \"textinput\"},\n          { label: \"Country\", value: \"United States\", type: \"dropdown\"}\n        ]\n      ];\n  }\n \n  \n}\n","import { FormApi, } from './forms.api';\nimport { FormDetails } from \"../../models/form/FormDetails\";\nimport { FormData } from \"../../models/form/FromData\";\nimport { FormWizard1 } from '../../models/form/FormWizard1';\nimport { FormWizard2 } from '../../models/form/FormWizard2';\nexport class FormService implements FormApi {\n \n  async getFormDetails(): Promise<FormDetails[]> {\n\n    // return fetch('/users', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(this.mapProductQuery(query))\n    // }).then(response => response.json())\n    return [];\n  }\n\n  async doPostFormValues(details: FormData): Promise<FormData[]> {\n    console.log(\"Save the Form Values\" + details);\n\n    return [];\n\n  }\n  async doUpdateFormValues(details: FormData): Promise<FormData[]> {\n\n    console.log(\"Update the Form Values\" + details);\n    return [];\n\n  }\n  async doPostFormWizard1(details: FormWizard1): Promise<FormWizard1[]> {\n    console.log(\"Save the FormWizard1 Values\" + details);\n\n    return [];\n   \n  }\n  async  doPostFormWizard2(details: FormWizard1): Promise<FormWizard2[]> {\n    console.log(\"Save the FormWizard1 Values\" + details);\n\n    return [];\n  }\n  async  doSearch(details: FormData): Promise<FormData[]> {\n    console.log(\"Search the form details\" + details);\n\n    return [];\n  }\n}\n","import { ListApi } from './list.api';\nimport { TableData } from \"../../models/list/TableData\";\nimport { ListToListData } from \"../../models/list/ListToListData\";\nimport { LinkedListData } from \"../../models/list/LinkedListData\";\nimport { SearchListData } from \"../../models/list/SearchListData\";\nexport class ListService implements ListApi {\n \n async getLinkedListData(): Promise<LinkedListData[]> {\n   throw new Error(\"Method not implemented.\");\n }\n async getTableData(): Promise<TableData[]> {\n      throw new Error(\"Method not implemented.\");\n  } \n  async getList2ListData(): Promise<ListToListData[]> {\n    throw new Error(\"Method not implemented.\");\n} \nasync getSearchListData(): Promise<SearchListData[]> {\n  throw new Error(\"Method not implemented.\");\n}\n}\n","import { CompositeFormApi } from './compositeform.api';\nimport { MasterDetails } from \"../../models/composite/MasterDetails\";\n\nexport class CompositeFormService implements CompositeFormApi {\n  getMasterDetails(): Promise<MasterDetails[][]> {\n    throw new Error(\"Method not implemented.\");\n  }\n  \n}\n","\nexport default async function timer(time, callback) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      if (callback) {\n        resolve(callback());\n      } else {\n        resolve();\n      }\n    }, time)\n  });\n}\n","import { StockItem } from '../../models/list/StockItem';\nimport { StockItemMockApi } from './stock-item-mock.api';\nimport * as superagent from 'superagent';\nimport timer from '../../util/timer';\n\nexport class StockItemMockService implements StockItemMockApi {\n    baseUrl: string;\n\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl || '/api';\n    }\n\n    async getStockItems(): Promise<StockItem[]> {\n\n        await timer(1000);\n\n        return [\n            {\n                \"name\": \"Item 1\",\n                \"description\": \"The first item\",\n                \"stock\": 10,\n                \"unitPrice\": 100.0,\n                \"picture\": \"test\",\n                \"manufacturer\": \"unknown\",\n            },\n            {\n                \"name\": \"Item 2\",\n                \"description\": \"The second item\",\n                \"stock\": 15,\n                \"unitPrice\": 120.5,\n                \"picture\": \"test1\",\n                \"manufacturer\": \"Apple\",\n            },\n            {\n                \"name\": \"Item 3\",\n                \"description\": \"The third item\",\n                \"stock\": 20,\n                \"unitPrice\": 75.5,\n                \"picture\": \"test1\",\n                \"manufacturer\": \"Sony\",\n            }\n        ];\n    }\n\n}","import { StockItem } from \"../../models/list/StockItem\";\nexport abstract class StockItemApi {\n    abstract async getStockItems(): Promise<StockItem[]>;\n}\n\n\n","import { StockItem } from '../../models/list/StockItem';\nimport { StockItemApi } from './stock-item.api';\nimport * as superagent from 'superagent';\nimport timer from '../../util/timer';\n\nexport class StockItemService implements StockItemApi {\n    baseUrl: string;\n\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl || '/api';\n    }\n\n    async getStockItems(): Promise<StockItem[]> {\n        return superagent\n            .get(this.baseUrl + '/stock-items')\n            .set('accept', 'application/json')\n            .then(res => {\n                console.log('Got response: ', res);\n                return res.body || [];\n            });\n    }\n\n}","import { Container } from 'typescript-ioc';\n\nimport { MockFormApi } from './form/displayform.mock.api';\nimport { FormMock } from './form/displayform.mock';\n\nimport { SearchFormMockApi } from './form/searchform.mock.api';\nimport { SearchFormMock } from './form/searchform.mock';\n\nimport { TableListMockApi } from './list/table-list.mock.api';\nimport { TableListMock } from './list/table-list.mock';\nimport { LinkedListMockApi } from './list/linkedlist.mock.api';\nimport { LinkedListMock } from './list/linkedlist.mock';\n\nimport { MasterDetailMockApi } from './composite/masterdetails.mock.api';\nimport { MasterDetailsMock } from './composite/masterdetail.mock';\n\nimport { FormApi } from './form/forms.api';\nimport { ListApi } from './list/list.api';\nimport { CompositeFormApi } from './composite/compositeform.api';\n\nimport { FormService } from './form/forms.service';\nimport { ListService } from './list/list.service';\nimport { CompositeFormService } from './composite/compositeform.service';\n\nimport { StockItemMockApi } from './list/stock-item-mock.api';\nimport { StockItemMockService } from './list/stock-item-mock.service';\n\nimport { StockItemApi } from './list/stock-item.api';\nimport { StockItemService } from './list/stock-item.service';\n\nexport * from './form/displayform.mock.api';\nexport * from './form/displayform.mock';\n\nexport * from './form/searchform.mock.api';\nexport * from './form/searchform.mock';\n\nexport * from './list/table-list.mock.api';\nexport * from './list/table-list.mock';\nexport * from './list/linkedlist.mock.api';\nexport * from './list/linkedlist.mock';\n\nexport * from './composite/masterdetails.mock.api';\nexport * from './composite/masterdetail.mock';\n\nexport * from './form/forms.api';\nexport * from './form/forms.service';\n\nexport * from './list/list.api';\nexport * from './list/list.service';\n\nexport * from './list/stock-item-mock.api';\nexport * from './list/stock-item-mock.service';\n\nexport * from './list/stock-item.api';\nexport * from './list/stock-item.service';\n\nContainer.bind(MockFormApi).to(FormMock);\nContainer.bind(SearchFormMockApi).to(SearchFormMock);\nContainer.bind(TableListMockApi).to(TableListMock);\nContainer.bind(LinkedListMockApi).to(LinkedListMock);\nContainer.bind(MasterDetailMockApi).to(MasterDetailsMock);\n\nContainer.bind(FormApi).to(FormService);\nContainer.bind(ListApi).to(ListService);\nContainer.bind(CompositeFormApi).to(CompositeFormService);\n\n/*** Stock Item Service  ******/\n\nContainer.bind(StockItemMockApi).to(StockItemMockService);\nContainer.bind(StockItemApi).to(StockItemService);","import { FormDetails } from \"../../models/form/FormDetails\";\nexport abstract class MockFormApi {\n  abstract  async  getFormDetails(): Promise<FormDetails[]> ;\n}\n\n","import { FormData } from \"../../models/form/FromData\";\nexport abstract class SearchFormMockApi {\n  abstract  async  getFormDetails(): Promise<FormData[]> ;\n}\n\n","import { TableData } from \"../../models/list/TableData\";\nexport abstract class TableListMockApi {\n  abstract  async  getTableData(): Promise<TableData[]> ;\n}\n\n","import { LinkedListData } from \"../../models/list/LinkedListData\";\nexport abstract class LinkedListMockApi {\n  abstract  async  getLinkedListData(): Promise<LinkedListData[]> ;\n}\n\n","import { MasterDetails } from \"../../models/composite/MasterDetails\";\nexport abstract class MasterDetailMockApi {\n  abstract  async  getMasterDetails(): Promise<MasterDetails[][]> ;\n}\n\n","import { FormDetails } from \"../../models/form/FormDetails\";\nimport { FormData } from \"../../models/form/FromData\";\nimport { FormWizard1 } from \"../../models/form/FormWizard1\";\nimport { FormWizard2 } from \"../../models/form/FormWizard2\";\nexport abstract class FormApi {\n  abstract  async  getFormDetails(): Promise<FormDetails[]> ;\n  abstract  async  doPostFormValues(details:FormData):Promise<FormData[]> ;\n  abstract  async  doUpdateFormValues(details:FormData):Promise<FormData[]> ;\n  abstract  async  doPostFormWizard1(details:FormWizard1):Promise<FormWizard1[]> ;\n  abstract  async  doPostFormWizard2(details:FormWizard1):Promise<FormWizard2[]> ;\n  abstract  async  doSearch(details:FormData):Promise<FormData[]> ;\n}\n\n","\nimport { TableData } from \"../../models/list/TableData\";\nimport { LinkedListData } from \"../../models/list/LinkedListData\";\nimport { ListToListData } from \"../../models/list/ListToListData\";\nimport { SearchListData } from \"../../models/list/SearchListData\";\nexport abstract class ListApi {\n  abstract  async  getTableData(): Promise<TableData[]> ;\n  abstract  async  getLinkedListData(): Promise<LinkedListData[]> ;\n  abstract  async  getList2ListData(): Promise<ListToListData[]> ;\n  abstract  async  getSearchListData(): Promise<SearchListData[]> ;\n}\n\n","import { MasterDetails } from \"../../models/composite/MasterDetails\";\n\nexport abstract class CompositeFormApi {\n  abstract  async  getMasterDetails(): Promise<MasterDetails[][]> \n}\n\n","import { StockItem } from \"../../models/list/StockItem\";\nexport abstract class StockItemMockApi {\n    abstract async getStockItems(): Promise<StockItem[]>;\n}\n\n\n","import React, { Component } from \"react\";\nimport StockItemList from '../../ui-patterns/list/StockItemList';\nimport { Container } from 'typescript-ioc';\nimport { StockItemApi } from '../../services';\n\nclass StockItemListView extends Component<any, any> {\n    stockApi: StockItemApi;\n    constructor(props: any) {\n        super(props);\n        this.stockApi = this.stockService()\n    }\n    stockService(): StockItemApi {\n        return Container.get(StockItemApi);\n    }\n\n    render() {\n        return (\n            <div className=\"pattern-container\">\n                <StockItemList stockService={this.stockApi} />\n            </div>\n        );\n    }\n}\nexport default StockItemListView;","import React, { Component } from \"react\";\n\n\nimport StockItemListView from \"../../components/list/StockItemList\";\n\n\nclass UIShellBody extends Component {\n  components = {\n    \"Stock Items\": StockItemListView\n  };\n  defaultComponent = \"Display Form\";\n\n  render() {\n    const PatternName = this.components[\n      this.props.patternName || this.defaultComponent\n    ];\n    return (\n\n      <PatternName showDescription={true} stockService={this.props.stockService} />\n\n    );\n  }\n}\nexport default UIShellBody;\n","import React, { Component } from \"react\";\nimport {\n  Content,\n  Header,\n  HeaderName,\n  SkipToContent,\n  SideNav,\n  SideNavItems,\n  SideNavMenu,\n  SideNavMenuItem,\n} from 'carbon-components-react/lib/components/UIShell/';\nimport UIShellBody from \"./UIShellBody\";\n\nconst Fade20 = () => (\n  <svg icon width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\" aria-hidden=\"true\">\n    <path d=\"M8.24 25.14L7 26.67a14 14 0 0 0 4.18 2.44l.68-1.88a12\n        12 0 0 1-3.62-2.09zm-4.05-7.07l-2 .35A13.89 13.89 0 0 0 3.86\n        23l1.73-1a11.9 11.9 0 0 1-1.4-3.93zm7.63-13.31l-.68-1.88A14\n        14 0 0 0 7 5.33l1.24 1.53a12 12 0 0 1 3.58-2.1zM5.59\n        10L3.86 9a13.89 13.89 0 0 0-1.64 4.54l2 .35A11.9 11.9 0 0 1 5.59\n        10zM16 2v2a12 12 0 0 1 0 24v2a14 14 0 0 0 0-28z\" />\n  </svg>\n);\n\nclass UIShell extends Component {\n  header = \"Big Blue Widgets\";\n  menuTitle = \"Inventory Management\";\n  menuItems = [\n    \"Stock Items\",\n  ];\n  constructor(props) {\n    super(props);\n    this.state = {\n      patternName: this.menuItems[0]\n    };\n  }\n\n  onPatternSelection = label => {\n    this.setState({ patternName: label });\n  };\n\n  renderSideNavItems = () => {\n    return this.menuItems.map(label => this.renderSideNavItem(label));\n  };\n\n  renderSideNavItem = label => {\n    return (\n      <SideNavMenuItem href=\"# \" isActive={label === this.state.patternName ? true : false} onClick={e => this.onPatternSelection(label)}>{label}</SideNavMenuItem>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Header aria-label=\"IBM Platform Name\">\n          <SkipToContent />\n          <HeaderName href=\"#\" prefix=\"IBM\">\n            {this.header}\n          </HeaderName>\n        </Header>\n        <SideNav aria-label=\"Side navigation\">\n          <SideNavItems>\n            <SideNavMenu\n              defaultExpanded\n              icon={<Fade20 />}\n              title={this.menuTitle}\n            >\n              {this.renderSideNavItems()}\n            </SideNavMenu>\n          </SideNavItems>\n        </SideNav>\n        <Content id=\"main-content\"><UIShellBody patternName={this.state.patternName} stockService={this.props.stockService} /></Content>\n      </div>\n    );\n  }\n}\n\nexport default UIShell;\n","import React, { Component } from \"react\";\nimport UIShell from \"./ui-patterns/ui-shell/UIShell\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <UIShell />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    console.log(window.location.href);\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}